from django.test import TestCase
from django.core.management import call_command
import os

from base.models import TopicPage

class TestCollectPages(TestCase):
    @classmethod
    def setUpTestData(cls):
        # setup test data: run once to set up non modified test data for all class methods"
        print("loading dummy data...")
        os.environ['LOAD_DATA'] = 'dummy'
        call_command('load_joplin_data')
        print("dummy data loaded")

    # def setUp(self):
    #     print("loading dummy data...")
    #     os.environ['LOAD_DATA'] = "dummy"
    #     call_command('load_joplin_data')
    #     print("dummy data loaded")

    # would it be more useful for me to write my own pages instead of loading the dummy data?

    def test_test(self):
        self.assertTrue(False)

    def test_page_in_topic_collection(self):
        changed_page = TopicPage.objects.get(id=53)
        print(changed_page)
        self.assertTrue(changed_page.id == '53')



    # test service pages
    # test topic pages?
    # write a test for each page type?
    #
