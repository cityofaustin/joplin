# Generated by Django 2.2.10 on 2020-03-11 15:58

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import taggit.managers
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.core.models
import wagtail.images.models
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('hours_exceptions', models.TextField(blank=True, max_length=255)),
                ('social_media', wagtail.core.fields.StreamField([('url', wagtail.core.blocks.URLBlock(label='Social media url'))], blank=True, help_text='For example: https://www.facebook.com/atxpoliceoversight/', verbose_name='Links to any social media pages')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DayAndDuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeploymentLog',
            fields=[
                ('operation', models.CharField(db_index=True, max_length=256, primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=256, null=True)),
                ('completed', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JanisBranchSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_input', models.CharField(choices=[('url', 'Url'), ('branch_name', 'Branch Name')], default='url', max_length=11, verbose_name='Preview Input Options')),
                ('preview_janis_url', models.URLField(blank=True, help_text='Url of deployed Janis branch to preview pages. Ex: "https://janis.austintexas.io", "localhost:3000" (Don\'t add quotes)', null=True, verbose_name='Preview Janis URL')),
                ('preview_janis_branch', models.TextField(blank=True, help_text='Name of Janis branch to preview pages. Ex: "3000-my-issue-name" (Don\'t add quotes)', null=True, verbose_name='Preview Janis Branch Name')),
                ('publish_janis_branch', models.TextField(blank=True, help_text='Name of Janis branch you want to publish to. Ex: "3000-my-issue-name" (Don\'t add quotes)', null=True, verbose_name='Publish Janis Branch Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('street', models.TextField()),
                ('city', models.CharField(default='Austin', max_length=255)),
                ('state', models.CharField(choices=[('TX', 'Texas')], default='TX', max_length=2)),
                ('country', models.CharField(choices=[('United States', 'United States')], default='United States', max_length=100)),
                ('zip', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('description_ar', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_es', models.TextField(null=True)),
                ('description_vi', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('phone_description', models.CharField(blank=True, max_length=255)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('text', models.CharField(max_length=255)),
                ('text_ar', models.CharField(max_length=255, null=True)),
                ('text_en', models.CharField(max_length=255, null=True)),
                ('text_es', models.CharField(max_length=255, null=True)),
                ('text_vi', models.CharField(max_length=255, null=True)),
                ('description', models.TextField()),
                ('description_ar', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_es', models.TextField(null=True)),
                ('description_vi', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TopicCollectionPageTopicCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TranslatedImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('title_ar', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('title_es', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('title_vi', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('file', models.ImageField(height_field='height', upload_to=wagtail.images.models.get_upload_to, verbose_name='file', width_field='width')),
                ('width', models.IntegerField(editable=False, verbose_name='width')),
                ('height', models.IntegerField(editable=False, verbose_name='height')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('focal_point_x', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_y', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_width', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_height', models.PositiveIntegerField(blank=True, null=True)),
                ('file_size', models.PositiveIntegerField(editable=False, null=True)),
                ('file_hash', models.CharField(blank=True, editable=False, max_length=40)),
                ('collection', models.ForeignKey(default=wagtail.core.models.get_root_collection_id, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Collection', verbose_name='collection')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text=None, through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='ContactDayAndDuration',
            fields=[
                ('dayandduration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.DayAndDuration')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('base.dayandduration', models.Model),
        ),
        migrations.CreateModel(
            name='TranslatedImageRendition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_spec', models.CharField(db_index=True, max_length=255)),
                ('file', models.ImageField(height_field='height', upload_to=wagtail.images.models.get_rendition_upload_to, width_field='width')),
                ('width', models.IntegerField(editable=False)),
                ('height', models.IntegerField(editable=False)),
                ('focal_point_key', models.CharField(blank=True, default='', editable=False, max_length=16)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renditions', to='base.TranslatedImage')),
            ],
        ),
    ]
