version: 2.1

jobs:
  deploy:
    docker:
      - image: cityofaustin/joplin-ci:112fa8f
    parameters:
      is_master:
        type: boolean
        default: false
      is_production:
        type: boolean
        default: false
      is_master_or_production:
        type: boolean
        default: false
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: "Test that CLI utilities work"
          command: bash ./.circleci/scripts/cli_test.sh
      - when:
          # Only backup Staging and Production databases
          condition: << parameters.is_master_or_production >>
          steps:
            - checkout
            - run:
                name: "Backup Database and Store in S3"
                command: bash ./.circleci/scripts/backup_database.sh
      - unless:
          # Production will not need to have any infrastructure built or rebuilt.
          condition: << parameters.is_production >>
          steps:
            - run:
                name: "Create App and Database for Heroku Pipeline"
                command: bash ./.circleci/scripts/build_heroku_infrastructure.sh
      - unless:
          # Only set env vars programatically for Review Apps
          # Master and Production have env vars set manually in Heroku console.
          condition: << parameters.is_master_or_production >>
          steps:
            - run:
                name: "Set environment vars for PR App"
                command: bash ./.circleci/scripts/set_pr_vars.sh
      - run:
          name: "Print App Environment Variables"
          command: bash ./.circleci/scripts/print_vars.sh
      - run:
          name: "Build Joplin Docker Image"
          command: bash ./.circleci/scripts/build_image.sh
      - run:
          name: "Release Image to Heroku"
          command: bash ./.circleci/scripts/release.sh
      - run:
          name: "Run Migrations"
          command: bash ./.circleci/scripts/migrate.sh

workflows:
  version: 2.1
  deploy:
    jobs:
      - deploy:
          is_master: true
          is_master_or_production: true
          filters:
            branches:
              only:
                - master
      - deploy:
          is_production: true
          is_master_or_production: true
          filters:
            branches:
              only:
                - production
      - deploy:
          filters:
            branches:
              ignore:
                - master
                - production
